/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&mt { tapping-term-ms = <700>; };

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <700>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL  &kp N1       &kp N2        &kp N3       &kp N4       &kp N5       &kp TILDE                                                                &kp GRAVE          &kp N6  &kp N7  &kp N8     &kp N9    &kp N0    &kp MINUS
&kp TAB    &kp Q        &mt LC(W) W   &mt LC(F) F  &mt LC(P) P  &kp B        &kp LEFT_BRACKET                                                         &kp RIGHT_BRACKET  &kp J   &kp L   &kp U      &kp Y     &kp SEMI  &kp BSLH
&kp ESC    &mt LC(A) A  &mt LC(R) R   &mt LC(S) S  &mt RC(T) T  &kp G        &none             &kp LEFT_ALT  &kp LEFT_WIN      &to 4      &kp ESCAPE  &kp CAPSLOCK       &kp M   &kp N   &kp E      &kp I     &kp O     &kp SQT
&kp LSHFT  &mt LC(Z) Z  &mt LC(X) X   &mt LC(C) C  &kp D        &mt LC(V) V                                  &kp HOME          &kp PG_UP                                 &kp K   &kp H   &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
&kp LCTRL  &mo 2        &kp LEFT_ALT  &kp LEFT     &kp RIGHT                 &kp SPACE         &kp TAB       &kp END           &kp PG_DN  &kp ENTER   &kp BACKSPACE              &kp UP  &kp DOWN   &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp EQUAL  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5  &trans                                                          &mo 3      &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
&kp TAB    &kp Q   &kp W     &kp E     &kp R      &kp T   &none                                                           &none      &kp Y   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &kp BSLH
&kp ESC    &kp A   &kp S     &kp D     &kp F      &kp G   &none     &kp LEFT_ALT  &kp LEFT_WIN      &kp LGUI   &kp RCTRL  &none      &kp H   &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B                           &kp HOME          &kp PG_UP                        &kp N   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &kp RSHFT
&kp LCTRL  &mo 2   &kp CAPS  &kp LEFT  &kp RIGHT          &kp BSPC  &kp DEL       &kp END           &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP      &kp DOWN      &kp KP_DOT     &kp RBKT         &mo 2
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4  &kp F5  &kp F6  &tog 1                                            &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans        &trans  &trans  &trans  &none                                             &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans        &trans  &trans  &trans  &none   &trans  &kp LEFT_WIN      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans        &trans  &trans  &trans                  &trans            &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &kp LEFT_ALT  &trans  &trans          &trans  &trans  &trans            &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };

        layer_QWERTY {
            bindings = <
&kp ESC    &trans  &trans  &trans  &trans  &trans  &trans                                      &trans  &trans  &trans  &trans     &trans      &trans    &trans
&trans     &kp Q   &kp W   &kp E   &kp R   &kp T   &trans                                      &trans  &kp Y   &kp U   &kp I      &kp O       &kp P     &trans
&trans     &kp A   &kp S   &kp D   &kp F   &kp G   &trans  &trans  &trans      &trans  &trans  &trans  &kp H   &kp J   &kp K      &kp L       &kp SEMI  &trans
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V   &kp B                   &trans      &trans                  &kp N   &kp M   &kp COMMA  &kp PERIOD  &kp FSLH  &trans
&kp LCTRL  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans     &trans      &trans    &trans
            >;
        };
    };
};
